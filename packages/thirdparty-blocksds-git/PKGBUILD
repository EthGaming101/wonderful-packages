# SPDX-License-Identifier: CC0-1.0
#
# SPDX-FileContributor: Adrian "asie" Siekierka, 2023

_pkgname=thirdparty-blocksds-git
source=("$_pkgname::git+https://github.com/blocksds/sdk#branch=master")

if [ "x$_pkgname" = "xthirdparty-blocksds-git" ]; then
	pkgname=(thirdparty-blocksds-git-toolchain thirdparty-blocksds-git-docs)
else
	pkgname=(thirdparty-blocksds-toolchain thirdparty-blocksds-docs)
fi

groups=($_pkgname)
_pkgver=0.6
pkgver=0.6.r146.5a0bb69
pkgrel=1
epoch=
pkgdesc="DS/DSi console homebrew toolchain maintained by AntonioND"
arch=("i686" "x86_64" "armv6h" "aarch64")
url="https://github.com/blocksds/sdk"
license=("complex")
depends=(
	runtime-gcc-libs
	runtime-musl
	toolchain-gcc-arm-none-eabi-binutils
	toolchain-gcc-arm-none-eabi-gcc-libs
	toolchain-gcc-arm-none-eabi-gcc
	toolchain-gcc-arm-none-eabi-picolibc-generic
	toolchain-gcc-arm-none-eabi-libstdcxx-picolibc
)
makedepends=(
	runtime-musl-dev
)
optdepends=(
	'toolchain-gcc-arm-none-eabi-extra: additional libraries'
)
sha256sums=('SKIP')
options=('!strip')

prepare() {
	cd "$_pkgname"
	git submodule init
	git submodule update

	# patch grit to build statically, as we do not bundle
	# a dynamic library version of freeimage
	sed -i -e 's/$(LIBS)/-static $(LIBS)/' tools/grit/Makefile
}

. "/wf/config/runtime-env-vars.sh"

if [ "x$_pkgname" = "xthirdparty-blocksds-git" ]; then
	GIT_REPO_DIR=$_pkgname
	. "../templates/git-pkgver.PKGBUILD"
fi

build() {
	wf_use_toolchain gcc-arm-none-eabi arm-none-eabi

	cd "$_pkgname"
	# make calls sub-Makefiles with -j`nproc`
	BLOCKSDS=`pwd` make -j1
}

package_thirdparty-blocksds-git-toolchain() {
	provides=(thirdparty-blocksds-toolchain)

	cd "$_pkgname"
	mkdir -p "$pkgdir"/thirdparty/blocksds/core

	BLOCKSDS=`pwd` INSTALLDIR="$pkgdir"/thirdparty/blocksds/core make -j1 install

	# patch compiled executables to use /opt/wonderful dynamic linker
	find "$pkgdir"/thirdparty/blocksds/core/tools -executable -type f -print0 |
		while IFS= read -r -d '' i; do
			# this will fail on statically-linked grit; consume the error
			wf_runtime_patchelf "$i" || true
		done
}

package_thirdparty-blocksds-git-docs() {
	depends=(thirdparty-blocksds-git-toolchain)
	optdepends=()

	cd "$_pkgname"

	mkdir -p "$pkgdir"/thirdparty/blocksds/core
	cp -aR changelog.rst "$pkgdir"/thirdparty/blocksds/core || true
	cp -aR docs "$pkgdir"/thirdparty/blocksds/core || true
	cp -aR examples "$pkgdir"/thirdparty/blocksds/core || true
	cp -aR readme.rst "$pkgdir"/thirdparty/blocksds/core || true
	cp -aR templates "$pkgdir"/thirdparty/blocksds/core || true
	cp -aR tests "$pkgdir"/thirdparty/blocksds/core || true
}
